
// Global variables for username and userId, chosen database to work with,
// and date, so as to be able to log changes
var iUserId = 0;
var sUserName = '';
var sDatabase = '';
// Global variable to store current date, used for logging the 'revision date' of each lemma a user worked on
var sRevDate = 'unknown';

// Array of ids of the quotations loaded, visible on screen
// The id of the quotation which is currently selected will be put into iCurSelQuote
var aQuotationIds = new Array();

// Index in aQuotationIds array of the currently selected quotatation
var iCurSelQuote = 0;

// Index of the currently selected attestation 
// (t.i. position of the currently selected word within quotation)
var iCurSelAtt = -1;

// This will contain the id of the lemma currently shown on screen
var iLemmaId = '';

// If the 'previous lemma' or the 'next lemma' button is activated, it gets value 1, 
// otherwise 0 (if which case it can't be clicked upon)
var bPrevButton = 0;
var bNextButton = 0;

// Copy of DOM object of latest attestation (so we can access style features etc.)
var oLatestAttestation = 0;
var sLatestAttestation = '';
var sLatestBackgroundColor = '';
var sDefaultBackgroundColor = '#FDD017';

// the type number that is chosen when we need a default type value
// (type values are 1-based)
var iDefaultTypeValue = 1; 

// Keep track of index of selected type of an attestation, when building a attestation group
// default is no type chosen, so index = -1
// (rows numbers are 0-based)
var iPreSelectedTypeRow = -1;

// Global array to keep track of features of the first
// attestation being clicked on when building a group
var aAttestationGroup = new Array();

// For group selection
var bMousePressed = 0;

// In a quotation, each word has an DOM id as 'att_<quote_nr>_<word_nr>'
// iSelectionQuoteId is assigned the value of <quote_nr>
var iSelectionQuoteId = -1;
// iFirstSelected is assigned the <word_nr> part from the DOM id 
// of the first selected word (whose id is like 'att_<quote_nr>_<word_nr>')
var iFirstSelected = -1;
// same as above, for the last selected word
var iLastSelected = -1;

// Global strings for printing
var sEncapsulatingMessageDivOpen = "<div class=message>";
var sEncapsulatingErrorDivOpen = "<div class=error>";
var sEncapsulatingDivClose = "</div>";

// Interval id, generated by calling js-native function setInterval for automatic update of stats on screen;
// we will need this id to be able to clear the timer (js-native clearInterval function)
var iIntervalId = 0;

// If an attestation is clicked upon and the types menu is shown, bClickedInTypeMenu is set to 1;
// but if the type menu is called by pressing  't', bClickedInTypeMenu was set to 0,
// causing different behaviour in function hideTypeMenu()
var bClickedInTypeMenu = 0;

// Index of selected type in types menu (t.i. in the popup for selection of a type, when attestating a word)
// The value if this variable is set at mouse over, when the mouse is pointing a row. Except for the last row
// which is meant for comments: the value of iSelectedTypeRow is computed by insertTypedAttestation() then.
// (rows numbers are 0-based)
var iSelectedTypeRow = -1;

// If the ` (backtick) key is pressed, bGroupKeyPressed will have value 1, otherwise 0.
var bGroupKeyPressed = 0;

// If the '1' key is pressed, bSelectKeyPressed will have value 1, otherwise 0.
var bSelectKeyPressed = 0;

// Keep track of pressed keys
var bShiftKeyDown = false;
var bAltKeyDown = false;
var bCtrlKeyDown = false;

// Location of some icons of the GUI
// (NOTE that the browser/javascript can change single quotes into double ones
//  and vice versa)
var sEllipticalImg = "<img src='images/elliptical.gif'>";
var sErroneuosImg = "<img src='images/erroneous.gif'>";
var sDubiousImg = "<img src='images/dubious.gif'>";
var reDubious = /<img src=["'][^'"]*images\/dubious\.gif['"]>/i;
var reElliptical = /<img src=["'][^'"]*images\/elliptical\.gif['"]>/i;
var reErroneous = /<img src=["'][^'"]*images\/erroneous\.gif['"]>/i;


// Custom user comment belonging to some attestation
// Once the user entered a value, this value is retrieved from DOM element with id 'usercomment'
var sAttestationComment = ""; 

// Default settings for the 'Save & new' warning
var bSpacebarPopupAlreadyShown = false; 
var bSaveAndNewButtonPopupAlreadyShown = false; 

// Are we within the auto-attest mode or not?
// (needed for function which needs to know whether they are called by auto-attest)
var bAutoAttest = false; 

// Do we need to press the ctrl key to get the types menu? (this is set in the globals.php file)
var bUseCtrlKey;